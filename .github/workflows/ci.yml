name: CI

on:
    pull_request:
        branches: [develop, main]
    push:
        branches: [develop, main]

jobs:
    build:
        env:
            SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
            SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: cache node_modules
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - uses: actions/setup-node@v1
              with:
                  node-version: '16.x'

            - run: npm ci

            - run: npm run format:check

            - run: npm test -- --coverage
              env:
                  CI: true

            - name: upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: code-coverage
                  path: coverage

            - name: build project
              if: github.event_name == 'push'
              run: npm run build

            - name: upload artifact
              if: github.event_name == 'push'
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: build

            - name: zip assets
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              run: |
                  zip -r build.zip ./build
                  zip -r coverage.zip ./coverage

            - name: create a release
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              run: npx semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}

            - name: deploy to staging
              if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
              run: npx surge --project ./build --domain sweet-insurance.surge.sh

            - name: deploy to prod
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              run: npx surge --project ./build --domain white-anger.surge.sh

            - name: upload coverage reports
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              run: npx codecov
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            - name: create gh issue
              if: faliure() && github.event_name == 'pull_request'
              run: |
                  curl --request POST \
                  --url https://api.github.com/${{github.repository}}/issues \
                  --header 'authorization: Bearer ${{secrets.GITHUB_TOKEN}}' \
                  --header 'Content-Type: application/json' \
                  --data '{"title": "Authomated Issue for commit: ${{github.sha}}", "body": "This issue was authomaticaly created by the GitHub Action workflow **${{github.workflow}}**. \n\n The commit hash was: _${{github.sha}}_", "assignees":["${{github.event.pull_request.user.login}}"]}'
